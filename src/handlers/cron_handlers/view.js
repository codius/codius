const logger = require('riverpig')('codius-cli:viewCronHandler')
const ora = require('ora')
const statusIndicator = ora({ text: '', color: 'blue', spinner: 'point' })
const crontab = require('crontab')
const { promisify } = require('util')
const { getCodiusState } = require('../../common/codius-state.js')

async function viewCron (options) {
  try {
    const { codiusStateJson } = await getCodiusState(statusIndicator, options)
    const manifestHash = codiusStateJson.manifestHash

    statusIndicator.start('Getting existing cron job(s)')
    const load = promisify(crontab.load)
    const cron = await load()

    let jobs
    if (options.all) {
      const notice = ' This line has been auto-generated by the codius cli'
      jobs = await cron.jobs({comment: notice})
    } else {
      jobs = await cron.jobs({comment: manifestHash})
    }
    if (jobs.length < 1) {
      throw new Error('No cron jobs exist for the uploaded pod(s)')
    }
    statusIndicator.succeed()
    console.info('Existing cron job(s):')
    jobs.map((job) => { console.info(job.toString()) })
    process.exit(0)
  } catch (err) {
    statusIndicator.fail()
    logger.error(err.message)
    logger.debug(err)
    process.exit(1)
  }
}

module.exports = {
  viewCron
}
